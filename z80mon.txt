


                       SECTION 2: MONITOR COMMANDS

        INTRODUCTION:

             The Monitor program provides the user complete control  over 
        this  computer  system, through the use of  the  Monitor  Command 
        described   in  this  section.   The  Motherboard  contains   the 
        following hardware features, which are controlled with and by the 
        Monitor program:

           - A 4 hex digit address display.
           - A 2 hex digit data display.
           - 16 hex numeric keys (0 to F).
           - 16  command function keys (14 of which are  currently 
             assigned
           - A hardware Reset switch.
           - A  24-pin  EPROM  programming socket  and  2  control 
             switches.
           - A cassette tape recorder interface.

             Applying  power to the system or pressing  the  Reset 
        switch  will reset all of the hardware in the  system  and 
        initialize  the Monitor.  The system will be  in  "Command 
        Mode",  indicated by an underbar in the  extreme  leftmost 
        digit of the display.  Most commands automatically  return 
        the  system to this Command mode after their operation  is 
        completed.  To return to Command mode from other  function 
        modes, the following options are available:

           - The [ESC] key may be pressed one or more times.  This 
             saves  all current mode parameters and Z80A  register 
             contents.
           - The Reset switch, S1, may be used if [ESC] is not ef-
             fective,  due to a user program error or an error  in 
             the use of a device.  This re-initializes the  entire 
             system and loses all saved information except  memory 
             contents.

        This  is  discussed in detail on page 10,  under  "Recover 
        from Entry Error".
             The  set  of Monitor commands forms two groups  of  8 
        independent functions.  All Group 1 functions are  entered 
        directly  by pressing a single command key.  All  Group  2 
        functions  are entered by entering a 4 hex digit  starting 
        address,  followed by a single command key.  Some  of  the 
        functions  execute  immediately while others  may  request 
        that further information by keyed in before executing.
             Some  commands take noticeable time to execute.   The 
        display   will  remain  dark  until  their  execution   is 
        completed.

        DISPLAY LAYOUT

              ---    ---    ---    ---      ---    ---
             |   |  |   |  |   |  |   |    |   |  |   |
              ---    ---    ---    ---      ---    ---
             |   |  |   |  |   |  |   |    |   |  |   |
              ---    ---    ---    ---      ---    ---
              MSD                  LSD      MSD    LSD
                      Address                  Data

                                      -9-



        LIST OF MONITOR COMMANDS:

         Group:   Key:   Function:         Described on page ( ):
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           1      EM     Return to examine-memory mode at location 
                         previously examined (11)
           1      GO     Continue executing user program at ad-
                         dress last stopped (16)
           1      ER     Return to examine-register mode, examine 
                         register contents as saved at last stop 
                         of user program (16)
           1      SI     Execute next user program instruction and 
                         stop in examine-register mode (19)
           1      BP     Enter Breakpoint setting mode (20)
           1      EIO    Enter I/O port mode (22)
           1      LD     Load memory block from cassette tape (24)
           1      PGM    Read into memory from EPROM programming 
                         socket (25)
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           2      EM     Enter examine-memory mode at specified 
                         address (11)
           2      MV     Move memory block starting at specified 
                         address (13)
           2      CMP    Compare memory blocks starting at 
                         specified address (15)
           2      GO     Start execution of user program from 
                         specified address (16)
           2      SI     Execute one user program instruction at 
                         specified address and stop in examine-
                         register mode (19)
           2      SV     Save memory block, starting at specified 
                         address, on cassette tape (24)
           2      PGM    Program an EPROM with contents of memory 
                         block starting at specified address (25)
           2      OFT    Calculate relative branch offset from 
                         specified address (28)

        RECOVERY FROM ENTRY ERRORS [ESC]:

             The  [ESC] key is used to recover from error made  in 
        entering  data  or commands to the system.   Some  command 
        have  multiple  "levels"  of  entry.   That  is,   several 
        complete  and distinct entries of address or data must  be 
        made before the command will be executed.  At any level of 
        entry, the [ESC] key will:

           - After a partial entry, clear the entry and go to  the 
             start  of  the present entry level.  It will  not  be 
             necessary to re-enter the preceding levels of  infor-
             mation.
           - At  the  start of a level, go back  to  the  previous 
             level.  If pressed repeatedly, it will eventually  go 
             back  to command mode and the original  command  will 
             not be executed.

             Pressing a group 2 command key, without preceding  it 
        with an address, will cause a triple bar to appear in  the 
        address  MSD display.  This can be cleared by  [ESC].   If 
        invalid keys are pressed during an operation, they will be 
        ignored.

                                      -10-



        EXAMPLE FORMAT:


             Throughout this manual, examples will be given in the 
        following format:

        Keystrokes:    Display:         Comments:

        In  the  "Keystrokes" column, one logical  group  of  key-
        strokes will be shown on each line, such as 0400 [EM],  an 
        address  and  a  command.  In the  "Display"  column,  the 
        display  contents will be represented as well as  possible 
        with  print.  Additional information will be  given  where 
        necessary in the "Comments" column.
             Obviously, an entry such as 0400 [EM] is comprised of 
        the separate keystrokes [0]; [4]; [0]; [0]; [EM].



        EXAMINE AND MODIFY MEMORY [EM]:


             The contents of any memory location within the Z80A's 
        addressing  capability  (0000  to FFFF)  may  be  examined 
        and/or  modified using the [EM] key.  The basic  keystroke 
        sequence is as follows:

        - Enter the memory address (4 hex digits).
             - Any further digits will be ignored.
        - Press [EM] to enter examine-memory mode.
             - The data display will show the 2 hex digits cor-
               responding  to the 8-bit pattern stored  in  the 
               addressed location.
        - Press  [EM] again (as many times as desired) to  step 
          forward through memory and examine the next location.
        - Press  [EP] (as many times as desired) to step  back-
          ward   through  memory  and  examine   the   previous 
          location.
        - Enter  2 hex digits to store them in the location  at 
          the desired address.
             - After the second digit is entered, the data will 
               be  stored  in the addressed location  and  then 
               read  back  and display.  Any attempt  to  write 
               into  an  EPROM or other read-only  device  will 
               simply cause the original memory contents to  be 
               read back and displayed, unchanged.
             - Every  pair of digits entered will be stored  in 
               the  location at the displayed address.  If  you 
               enter  an incorrect digit pair, simply  re-enter 
               the correct pair.
             - Entering an odd number of digits will cause  all 
               of  the command keys except [ESC] to be  ignored 
               until  another  digit is pressed,  or  [ESC]  is 
               pressed to delete the last digit.
        - In  Command mode, pressing [EM] without preceding  it 
          with an address will cause the most recently examined 
          location to be displayed again.  The current  address 
          is  always remembered by the Monitor.  (This  is  the 
          Group 1 command).
        - Pressing [ESC] returns the system to command mode.

                                      -11-



        Example of Examine and Modify Memory function:

        Suppose part of the memory contents are as follows:

        addr:   0400  0401  0402  0403
        data:    32    17    3F    FF

        Keystrokes:     Displayx        Comments:
                        _            < underbar
         0400 [EM]      0400 32      < contents of location 0400
                                       are read and displayed
         [EM]           0401 17      < step forward
         [EM]           0402 3F
         [EP]           0401 17      < step backward
          64            0401 64      < 2 digits entered to be
                                       stored in location 0401
         [ESC]          _            < underbar indicates that
                                       sysem has returned to
                                       Command mode
         [EM]           0401 64      < examine-memory mode is re-
                                       entered.  The monitor will
                                       remember the address
          4             0401 44      < suppose you want 3A instead
         [ESC]          0401 64      < incorrect digit deleted
          3A            0401 3A
         [ESC]          _            < back to Command mode



































                                      -12-



        MOVE MEMORY BLOCK [MV]:

             Any  block of data, of any size, may be  copied  into 
        any  other block of the same size by the Move  Data  Block 
        command.  It is important to note that the data is  COPIED 
        into  the new block and the contents of the old block  are 
        not changed (unless the new block overlaps the old one.)

             The keystroke sequence is as follows:

        - Enter  the  starting-address of the  old,  or  source 
          block (4 hex digits).
        - Press [MV].
             - Address display will become blank and an  under-
               bar will appear in the data MSD display.
        - enter the ending-address of the old, or source  block 
          (4 hex digits).
        - Press [GO].
             - Address display will become blank and the under-
               bar will shift to the data LSD display.
        - Enter the starting-address of the new, or destination 
          block (4 hex digits).
        - Press [GO].
             - The data in the source block will be written, in 
               order  into the destination block,  starting  at 
               the specified address.
             - The  examine-memory mode will be  entered  auto-
               matically with the contents of the first byte of 
               the destination block being displayed.  Pressing 
               [EM] or [EP] will allow the destination block to 
               be examined and/or modified.

             Memory contents can be moved by any amount in  either 
        direction (up or down).  You may move part of a program up 
        a  few  locations to make room for  new  instructions,  or 
        delete  some  instructions by moving part of  the  program 
        down to overlap them.


        Example:  move 2K of the Monitor program into RAM:

        Keystrokes:     Display:        Comments:

                        _             < start in Command mode
          F000          F000          < enter starting-address of
                                        source block
          [MV]               _        < underbar in data MSD
          F7FF          F7FF _        < enter ending-address of
                                        source block
          [GO]                _       < underbar in data LSD
          0400          0400  _       < enter starting-address of
                                        destination block
          [GO]          0400 21       < examine-memory mode is
                                        entered automatically
          [EM]          0401 b0       < step forward, examine
          [ESC]         _             < back to Command mode





                                      -13-



        Example:  A block of 120 (hex) bytes, starting in location 
                  0436, is to be moved up 3 locations.  The  first 
                  few bytes are as follows:

             addr:  0436  0437  0438
             data:   2b    A5    7C

        Keystrokes:     Display:        Comments:
          0436          0436
          [MV]               _
          0555          0555 _        < 0436 + 11F = 0555
          [GO]                _
          0439          0439  _       < 0436 + 3 = 0439
          [GO]          0439 2b       < examine-memory mode is
                                        entered
          [EM]          043A A5       < step forward
          [EM]          043b 7C
          [ESC]         _             < back to command mode

        Note that the bytes in the new block are in the same order 
        as they were in, in the old block.  The new memory map is:

             addr:  0436  0437  0438  0439  043A  043b
             data:   2b    A5    7C    2b    A5    7C   etc.

        Note  also that the contents of location 0436,  0437,  and 
        0438  are unchanged.  They are never written into in  this 
        operation.
        Note  also  that to move 120 (hex) bytes, we  specify  the 
        ending-address of the source block as 11F  (120 - 1 = 11F) 
        bytes  above  the starting-address,  since  the  starting-
        address itself contains one of the bytes to be moved.

        Example:  Previous move operation with entry errors:

        Keystrokes:     Display:        Comments:
          0436          0436
          [MV]               _
          058           058  _        < entered wrong digit (8)
          [ESC]              _        < [ESC] clears entry and goes
                                        back to start of level
          0555          0555 _
          [GO]                _
          0439          0439  _       < user decides to move 122
                                        bytes instead of 120
          [ESC]              _        < [ESC] clears entry and goes
                                        back to start of level
          [ESC]              _        < [ESC] goes back to start of
                                        previous level (awaiting
                                        ending-address of source
                                        block)
          0577          0577 _        < 0436 + 121 = 0557
          [GO]                _
          0439          0439  _
          [GO]          0439 2b       < operation is complete.
                                        examine-memory mode is en-
                                        tered at location 0439

        The result is that 122 bytes, from locations 0436 to  0557 
        inclusive, have been copies into locations 0439 to 055A.

                                      -14-



        COMPARE MEMORY BLOCKS [CMP]:

             Any block of data in memory, of any size, may be com-
        pared with any other block of the same size by the Compare 
        Memory  Blocks command.  The comparison is  byte-for-byte, 
        and the system will automatically indicate where any  dis-
        crepancies occur.  The keystroke sequence is as follows:

        - Enter the starting-address of the first block.
        - Press [CMP].
        - Enter the ending-address of the first block.
        - Press [GO].
        - Enter the starting-address of the second block.
        - Press [GO].
        - If  all corresponding bytes of both block match,  two 
          underbars will appear in the two LSDs of the  address 
          portion of the display.
             - Return to Command mode by pressing [ESC].
        - If the contents of any location in the first block do 
          not match the contents of the corresponding  location 
          in the second block, the comparison will stop and the 
          display  will  show  the address  and  data  of  this 
          location in the SECOND block.
             - Pressing  [EP] displays the address and data  of 
               the corresponding location in the FIRST block.
             - Pressing  [EM] displays the address and data  of 
               the location in the second block.
             - Note: Examine-memory mode is NOT entered.  It is 
               not  possible to modify memory locations in  the 
               middle of a comparison operation.
        - Press [GO] to continue comparison.
             - If  a  further mismatch exists,  the  comparison 
               stops again as above.
             - If all locations match to the end of the  block, 
               display  will show two underbars in the two LSDs 
               of the address portion of the display.


        Example:   Compare  locations F000 to F000 with the  block 
                   starting at address 0400.

        Keystrokes:     Display:       Comments:
                        _             < start from Command mode
          F000          F000
          [CMP]              _        < underbar shown in data MSD
          F300          F300 _
          [GO]                _       < underbar shown in data LSD
          0400          0400  _
          [GO]          045A 16       < assume a mismatch here
          [EP]          F05A 06
          [GO]          05E2 37       < assume a mismatch here
          [EP]          F1E2 27
          [GO]            __          < underbars indicate rest of
                                        bytes are correct to end of
                                        block
          [ESC]         _             < back to Command mode





                                      -15-



        EXECUTE PROGRAM [GO], EXAMINE REGISTERS [ER], CONTINUE:

            This  group  of commands allows the user  to  directly 
        control  the execution of machine-language programs.   The 
        keystroke sequences are as follows:

        - Enter starting-address of program.
        - Press [GO].
             - Display will turn off and remain dark while user 
               program  executes (unless the program makes  use 
               of the display).
        - Press [ESC] to interrupt execution (ie: Pause).
        - The  examine-register  mode will be entered  and  the 
          display will show the contents of the Program Counter 
          (the  address of the next instruction to be  fetched) 
          in the address portion of the display and "PC" in the 
          data portion.
             - Pressing a digit key will select a register pair 
               as follows:

                0   1   2   3   4   5   6   7   8   9   A   B
               AF  BC  DE  HL  AF' BC' DE' HL' IX  IY  IR  SP

               The contents of the register pair will appear in 
               the address portion of the display and the  reg-
               ister  pair identifier (see next page) will  ap-
               pear in the data portion.
             - This list of registers can be scanned forward or 
               backward with the [ER] and [EP] keys.
        - Enter a digit to modify the MSD of the first register 
          of the displayed pair.
             - Pressing [ESC] will clear this digit and display 
               the original contents of the register pair.
        - Enter  a second digit to store the two digits in  the 
          first register and display the updated registers.
             - Pressing  [ESC] will skip over the  second  reg-
               ister  and  display the register pair  with  the 
               first register updated.
        - Enter  a third digit to modify the MSD of the  second 
          register.
             - Pressing  [ESC]  will  delete  this  digit   and 
               display the register pair again.
        - Enter a fourth digit to store the two  most-recently-
          entered  digits into the second register and  display 
          the updated registers.
        - Pressing  [GO]  after a register pair has  just  been 
          displayed will skip over the first  register to allow 
          modification of just the second register.
        - Pressing  [ESC] after a register pair has  just  been 
          displayed  will  display PC again and return  to  the 
          start of examine-register mode.
        - Pressing  [GO] at the start of examine-register  mode 
          will  continue  program execution with  updated  reg-
          isters.
        - Pressing  [ESC]  when  PC displayed  will  return  to 
          command mode without affecting register contents.
             - In  Command mode the user may examine memory  or 
               do other operations.
             - Press [ER] to return to examine-register mode.
        - Press [GO] in Command mode to continue program  exec-
          ution from last saved address (contents of PC).
                                      -16-



        * Register pair identifiers: Limitations of the  7-segment 
        displays  prevent perfect representations of  the  letters 
        used to identify register pairs.  The approximations  used 
        are as follows:


            .-----.   .-----           .-----.   .-----
            !     !   !                !     !   !
            !-----'   !       =PC      !-----!   !-----  =AF
            !         !                !     !   !
            !         "-----           !     !   !


            !         .-----                 !   .-----
            !         !                      !   |
            !-----.   !       =BC      .-----!   !-----  =DE
            !     !   !                !     !   !
            "-----'   "-----           "-----'   "-----


            !     !   !                .-----.   .
            !     !   !                !     !   !
            !-----!   !       =HL      !-----!   !       =AF'
            !     !   !                !     !
            !     !   !                !     !


            !         !                      !   !
            !         !                      !   !
            !-----.   !       =BC'     .-----!   !       =DE'
            !     !                    !     !
            "-----'                    "-----'


            !     !   !                      !   !
            !     !   !                      !   !
            !-----!   !       =HL'           !   "-----. =IX
            !     !                          !         !
            !     !                          !         !


                  !   !     !                !
                  !   !     !                !
                  !   "-----! =IY            !   .-----  =IR
                  !         !                !   !
                  !    -----'                !   !


            .-----    .-----.
            !         !     !
            "-----.   !-----' =SP
                  !   !
             -----'   !








                                      -17-



        Example:   How  to  write and execute  a  simple  machine-
                   language program.

             Machine-language  programs  may be  written  directly 
        into  memory using the Examine and Modify Memory  command.  
        The following memory map shows a simply looping program:

        addr:  0400  0401  0402  0403  0404  0405  0406  0407
        data:   00    00    00    00    00    C3    00    04

        The five 00 instructions are NO-OP, and the C3 00 04 is an 
        unconditional jump to address 0400.  This program would be 
        entered as follows:

        Keystrokes:     Display:       Comments:
                        _            < start in command mode
          0400          0400         < select starting-address
         [EM] 00        0400 00      < enter program
         [EM] 00        0401 00
         [EM] 00        0401 00
         [EM] 00        0402 00
         [EM] 00        0403 00
         [EM] 00        0404 00
         [EM] C3        0405 C3
         [EM] 00        0406 00
         [EM] 04        0407 04
          [ESC]         _            < back to Command mode

        The following keystroke sequence illustrates the  Execute, 
        Examine Registers and Continue commands:

        Keystrokes:     Display:       Comments:
                        _            < start in Command mode
          0400          0400         < enter starting address
          [GO]                       < display dark during program
                                       execution
          [ESC]         0403 PC      < pause: examine-register
                                       mode is entered
           3            0400 HL      < select HL register pair
          [ER]          0144 A'      < advance to AF' pair
           81           8144 A'      < modify register A'
          [ESC]         8144 A'      < skip over register F'
          [EP]          0400 HL      < go back to HL pair
          [GO]          0400 HL      < skip over register H
           3C           043C HL      < modify register L
          [ESC]         0403 PC      < back to start of examine-
                                       register mode
          [GO]                       < continue execution with up-
                                       dated registers
                                       (display dark)
          [ESC]         0402 PC      < pause
          [ESC]         _            < back to Command mode
                                       User may examine memory or
                                       perform other operations
          [GO]                       < continue execution
                                       (display dark)
          [ESC]         0404 PC      < pause
          [ESC]         _            < back to Command mode
          [ER]          0404 PC      < enter examine-register mode
                                       user may modify registers
          [GO]                       < continue execution
                                      -18-



        SINGLE-INSTRUCTION EXECUTION [SI]:

             The  Single-Instruction  command allows the  user  to 
        execute a program one instruction at a time for  debugging 
        purposes.   The  machine will fetch the  next  instruction 
        from memory and execute it entirely, regardless of whether 
        it is a single- or multi-byte instruction.
             The Single-Instruction command may be used to execute 
        one instruction either at the beginning of a program  (ie: 
        starting from Command mode) or at any program break.  This 
        includes a break caused by the use of [ESC] (page 16) or a 
        break caused by the use of a Breakpoint (page 20).
             The  basic  keystroke  sequence for the  use  of  the 
        Single-Instruction command is as follows:

        - Enter the starting-address of a program.
        - Press [SI].
             - The  first  instruction of the program  will  be 
               executed  and the examine-register mode will  be 
               entered with PC displayed.
        - Press  [SI] at the start of examine-register mode  or 
          from Command mode to execute the next instruction and 
          return to examine-register mode.


        Example:  Single-step through the program on page 18:

        Keystrokes:     Display:       Comments:
                        _            < start in Command mode.
          [SI]          0401 PC      < first instruction (00 in
                                       location 0400 is executed
                                       and examine-register mode
                                       is entered
          [SI]          0402 PC      < execute next instruction
          [SI]          0403 PC      < execute next instruction
           2            0400 DE      < select DE register pair
                                       user may examine and modify
                                       registers if necessary
          [ESC]         0403 PC      < return to start of examine-
                                       register mode
          [SI]          0404 PC      < execute next instruction




















                                      -19-



        BREAKPOINTS [BP]:

             The  breakpoint facility of the Monitor  enables  the 
        user  to specify up to four points (breakpoints) within  a 
        program, at which execution will be halted  automatically.  
        Breakpoints are NOT Z80A instructions, but features of the 
        Monitor  program  and as such, they do not  require  extra 
        space to be included in a program.
             A breakpoint is inserted into a program by specifying 
        the  address  of an instruction already  in  the  program.  
        When  the  processor attempts to fetch  that  instruction, 
        execution will be halted and examine-register mode will be 
        entered.   When  execution is continued,  the  instruction 
        which  had  been "masked" by the break point will  be  the 
        first to be executed.
             Associated  with  each of the four  available  break-
        points is an optional delay number.  This is a 4 hex digit 
        number  specifying how many times that breakpoint must  be 
        encountered  by  the  processor,  before  the  break  will 
        actually occur.  These "delayed" breakpoints may be  mixed 
        freely with normal breakpoints within a program.
             The keystroke sequence for setting breakpoints is  as 
        follows:

        - Press [BP].
             - Display shows an underbar in the data MSD and  a 
               zero  in the data LSD.  (Breakpoint 0  has  been 
               examined).
        Enter  breakpoint address.  Note: this address must  be 
          that  of the FIRST byte of an instruction,  and  that 
          instruction  will be the first to be  executed  after 
          execution is continued following the break.
        - Press [GO] to save this address as breakpoint 0.
        - Press [BP] to examine breakpoint 1.
             - Pressing  [BP]  repeatedly will  examine  break-
               points 2 and 3, then return to 0.
        - Press [EP] to examine the previous breakpoint.
        - Press [GO] (without preceding it with an address)  to 
          clear  the  displayed breakpoint and  the  associated 
          delay number.
        - Press  [ER]  after entering a breakpoint  address  to 
          examine the delay number associated with this  break-
          point.
             - Display shows zeroes in the address portion  and 
               the symbol
                             !
                             !
                             !-----
                             !
                             !
               in  the  data MSD portion, with  the  breakpoint 
               number in the data LSD.  The delay count  symbol 
               will be represented here by !-
        - Enter a 4 hex digit delay number.
        - Press [GO] to save this delay number.
             - Display shows breakpoint address again.
        - Press [ESC] to return to command mode.

          ...continued next page


                                      -20-



        - Execute  the  program in which the  breakpoints  have 
          been inserted.
        - When a breakpoint address is reached the program will 
          be interrupted and examine-register mode will be  en-
          tered.  The user may examine or modify registers,  or 
          use [SI] to step through the program.
             - Press [GO] to continue execution.
        - If  a non-zero delay number is set for a  breakpoint, 
          that  breakpoint's  address must be  encountered  the 
          specified  number of times before execution  will  be 
          interrupted.

        Notes on Breakpoints:

        - Breakpoints may only be set in RAM.
        - Every  time a delayed breakpoint causes a break,  its 
          delay number is re-initialized.  The delay number for 
          a  given breakpoint will not be  affected  by  breaks 
          caused by other breakpoints.

        Example:  Using breakpoints with the program on page 18:

        Keystrokes:     Display:       Comments:
                        _            < start in Command mode,
                                       having entered the program
          [BP]               _0      < examine breakpoint 0
          0402          0402 _0      < enter an address for b.p. 0
          [GO]          0402 _0      < store the address
          [BP]               _1      < select next breakpoint
          0404          0404 _1      < enter an address for b.p. 1
          [GO]          0404 _1      < store the address
          [ER]          0000!-1      < examine the delay number
                                       associated with b.p. 1
          0008          0008!-1      < enter a new delay number
          [GO]          0404 _1      < store the delay number
                                       display shows b.p. address
          [ESC]         _            < back to command mode

         0400 [GO]      0402 PC      < break in 0402 (b.p. 0)
          [GO]          0402 PC      < break in 0402 (b.p. 0)
          [GO]          0402 PC      < break in 0402 (b.p. 0)
          [GO]          0402 PC      < break in 0402 (b.p. 0)
          [GO]          0402 PC      < break in 0402 (b.p. 0)
          [GO]          0402 PC      < break in 0402 (b.p. 0)
          [GO]          0402 PC      < break in 0402 (b.p. 0)
          [GO]          0402 PC      < break in 0402 (b.p. 0)
          [GO]          0404 PC      < break in 0404 (b.p. 1)

             If  you study this example very carefully,  you  will 
        see  that breakpoint 1 did not cause a break until it  had 
        been  encountered 8 times.  Since execution start  at  ad-
        dress  0400,  breakpoint 1 was not encountered  after  the 
        first pressing of [GO].  Thereafter, both breakpoints were 
        encountered  7 times, and on the final pressing  of  [GO], 
        breakpoint  1  caused a break, having been  encountered  8 
        times.  The pattern of breaks would repeat itself if  [GO] 
        was pressed a further nine times.




                                      -21-



        EXAMINE AND LOAD I/O PORTS [EIO]:

             Any  of the Z80A's 256 I/O ports may be  examine  and 
        loaded using this command, which is a little bit like  the 
        Examine  and Modify Memory command described on  page  11.  
        The keystroke sequence for this command is as follows:


        - Press [EIO] to enter Examine I/O Ports mode.
             - Display will show underbars in the two MSD  pos-
               itions of the address section.
        - Enter  two hex digit I/O port address.
             - Display will show an underbar in the MSD  posit-
               ion of the data section.
        - Press [ER] to examine (read) the addressed I/O port.
        - Enter two hex digits to load the I/O port.
             - The I/O port will by loaded every time the  sec-
               ond of two digits is entered.
        - Press [EP] to decrement the I/O port address.
             - Display  will show an underbar in the  MSD  data 
               position.
             - A read operation does not occur automatically to 
               prevent  device status register side-effects  if 
               reading a data register.
             - Press  [ER] to read the addressed I/O  port  (if 
               desired).
        - Press [EIO] to increment the I/O port address.
             - If an illegal key (such as [EM]) is pressed,  it 
             will be ignored.
        - Press  [ESC]  to return to the start of  examine  I/O 
          ports  mode,  to  allow  entering  another  I/O  port 
          address.
        - Press  [ESC] when the two underbars are displayed  to 
          return to Command mode.


        Example of Examine I/O Ports command:

        Keystrokes:     Display:       Comments:
                        _            < start in Command mode
          [EIO]         __           < enter examine ports mode
           F5           __F5 _       < select a port (control
                                       register of the 8251)
          [ER]          __F5 00      < read the port
           4E           __F5 4E      < load the port
          [ER]          __F5 07      < read the port again
                                       contents have changed due
                                       to external actions
          [EP]          __F4 _       < decrement the port address
          [EIO]         __F5 _       < increment the port address
          [ESC]         __           < back to start of mode
           36           __36 _       < select another port
          [ESC]         __           < back to start of mode
                                       (assume you did not wish to
                                       read port 36)
          [ESC]         _            < back to Command mode





                                      -22-



        CASSETTE TAPE CALIBRATION:

             The Cassette Tape interface of the Multiflex computer 
        is designed for very high-speed operation (2000  bits/sec) 
        and  therefore requires fairly careful calibration of both 
        the tape recorder and the interface circuitry, in order to 
        work  reliably.  Two small utility routines have been  in-
        corporated  into the standard Monitor EPROMs to assist  in 
        this.  The calibration procedure is as follows:

        - Plug the cassette interface "OUT" cable into the  re-
          corder's microphone jack, and the "IN" cable into the 
          earphone jack.
        - Turn on the tape machine and start recording.
        - From  Command mode, enter FD00 as a  starting-address 
          and press [GO].
             - A 1 KHz tone will be recorded onto the tape.
               If  your recorder is equipped with  a  recording 
               level  control and VU meter, adjust the  control 
               until the meter reads zero dB.
             - Keep recording for several minutes.
        - Press [ESC] to return to command mode.
        - Stop  the  tape recorder, rewind, and  start  playing 
          back.
             - If you do not know where you started  recording, 
               remove  the  computer's  "IN"  cable  from   the 
               machine's  earphone  jack and listen  until  you 
               hear  a loud, high-pitched whine.  Then put  the 
               cable back and continue playing back.
        -  Enter starting-address FD20 and press [GO].
             - A vertical bar in the display will indicate  the 
               calibration accuracy.
        - Set  trimmer potentiometer R25A to mid-way, the  tape 
          recorder's  volume control to about 2/3  of  maximum, 
          and  tone control (if your recorder has one) to  max-
          imum.
        - Adjust  R25A to locate the bar in the address LED  of 
          the display.
             - Flickering bars may appear in the other  digits; 
               try to minimize them using R25A.
        - Adjust  the tape recorder's volume and tone  controls 
          for the most stable display.

                     !    !    !    !       !    !
                     !    !    !    !       !    !
                     ^----^         ^       ^----^
                     volume     calibrated   volume
                    too low                 too high

        - Press  [ESC] to return to Command mode and  stop  the 
          tape recorder.
        - Mark the position of the tone and volume controls, so 
          you  will  be  able to find them  again  without  re-
          calibrating.

             For best results, calibration should be done  period-
        ically.    Once  R25A  has  been  set  during  the   first 
        calibration, it should not be necessary to change the set-
        ting unless a different recorder is used or recording  be-
        comes  unreliable.  The tape recorder's volume control  is 
        usually sufficient to restore calibration.
                                      -23-



        SAVE MEMORY BLOCK [SV]:

             A block of data of any size may be saved from  memory 
        to  cassette  tape  using  this  command.   The  keystroke 
        sequence is as follows:

        - From  Command  mode, enter the starting-address  of  the 
          block to be saved.
        - Press [SV].
        - Enter the ending-address of the block.
        - Start recording.
        - Press [GO].
             - The block of data will be written onto the tape, 
               preceded  by  a 8-second preamble and  a  header 
               containing  the starting-address in  memory  and 
               the block size, followed by a checksum.
             - The  display will turn off for the  duration  of 
               this operation (8 seconds of pre-amble plus four 
               seconds per K bytes of data).
        - The  sysem will automatically return to command  mode 
          when  finished (signified by an underbar  in  address 
          MSD position).
        - Stop the tape recorder.

        LOAD MEMORY BLOCK [LD]:

             To  put stored data back into memory from  the  tape, 
        the following simple procedure is done:

        - Set up the recorder's tone and volume controls to the 
          positions  marked  during the  calibration  procedure 
          (see page 23).
        - Find the start of the block pre-amble on the tape  by 
          using the tape counter (if you recorder has one),  by 
          listening  to the tape (the preamble will sound as  a 
          loud, high-pitched whine), and/or by watching the LED 
          (D1)  on the Motherboard, which will light when  pre-
          amble or data is being received from the tape.
        - Press [LD] while the tape is in the pre-amble.
             - Since  the  Save  operation  stores  the  memory 
               starting-address on the tape, the data will load 
               back  into  the same block in memory as  it  was 
               stored from.
        - After the time required to load the block  (remainder 
          of pre-amble plug four seconds per K bytes of  data), 
          if the check-sum is found to be correct, the computer 
          will automatically enter the examine-memory mode.
        - The  address and data of the first byte in the  block 
          will be displayed.
        - If a check-sum error is detected, due to the tape re-
          corder  controls being improperly set  or  electrical 
          noise  on  the  tape, the  display  will  show  three 
          horizontal bars in the data MSD position.
             - It may be necessary to re-calibrate before load-
               ing again.
        - If a major error occurs (no data on tape, dirty tape, 
          volume  control  set far too low or  high)  the  read 
          operation  will not terminate and must be stopped  by 
          the Reset switch.
             - This  condition may exist if the read  operation 
               take far more than the required time.
                                      -24-



        EPROM PROGRAMMING [PGM]:


             It is possible to program EPROMs with data stored  in 
        memory.   Presently, 2708s (triple supply),  2716s  (single 
        supply),  2732s (single supply) and 2532s (single  supply) 
        may  be programmed.  In order to program any EPROM a  26V, 
        30mA  power  supply will be required,  and  the  following 
        procedure should be observed:


        - Check  that jumper (J1) is set up properly;  this  is 
          very important, since J1 selects (among other things) 
          the  power  supplies  to  the  EPROM  socket,  which, 
          incorrectly set may damage the device.
        - Check that the hardware changes have been made to the 
          motherboard.  (See addendum).
        - Check that the +26 volt supply is connected.
        - Set S2 to DIS, and S3 to RD.
        - Insert the EPROM.
        - Set S2 to EN.
        - Follow the procedure below for the particular type of 
          EPROM you are using.

        Programming a 2708:

        Note: This procedure will completely program the 1024 loca-
              tions  in a 2708, from the data specified in  memory.  
              It is not possible to partially program a 2708.

        - Turn on the 26V supply.
        - From command mode, enter the starting address of  the 
          data block in memory.
        - Press [PGM].
             - Display  will show an underbar in the  data  MSD 
               position.
        - Enter the ending address of the data block in memory, 
          in this case, ending address = starting address+ 
          3FFH.*
        - Press [GO].
             - Display  will  show  an  underbar  in  data  LSD 
               position.
        - Enter  the destination-address in the 2708 where  the 
          data  block  is  to  be  programmed,  in  this  case, 
          destination address = 0000H.*
        - Press [GO].
             - Display will blank and the underbar will be left 
               in the data LSD position.
        - Enter the device name, in this case 2708.
        - Press [GO].
             - If the 2708 is in a completely erased condition, 
               the display will turn off and the EPROM will  be 
               programmed.
             - If  the  2708  has  some  non-FF  locations  the 
               display show the first such location
                  - Press [GO] to continue programming
                    or;
                  - Press [ESC} to return to command mode.



                                      -25-



        * (Even though this information is not required to program 
          a  2708, it must be entered, since the  Monitor  expects 
          this  format  all  programmed  devices,  in  this   case 
          however, this superfluous information is ignored.)

        Example:  Program  the contents of locations 0400 to  07FF 
                  (1K Bytes) into a 2708.

        Keystrokes:     Display:       Comments:
                        _            < start in Command mode and
                                       set S2 to EN
          0400          0400         < enter starting address
          [PGM]              _
          07FF          07FF _       < enter ending address
          [GO]                _
          0000          0000  _      < enter destination address in
                                       2708
          [GO]                _
          2708          2708  _      < enter device name
          [GO]                       < display dark while EPROM is
                                       programming (108 seconds)
                        005C 2d      < mismatch found during
                                       verify operation.
          [EP]          045C 3d      < compare with RAM contents;
                                       bit was not erased.
          [GO]                       < proceed with verification
                          __         < rest of locations match

        EPROM PROGRAMMING:

        - 2716, 2732, 2532 procedure.

        This  procedure  allows  the user  to  program  any  block 
        located  anywhere  in the above devices and  of  any  size 
        without  disturbing  the  rest of  the  EPROM's  contents.  
        There are small programming differences between the  above 
        devices,   however,  the  format  and  structure  of   the 
        programming procedure is the same.  Any difference will be 
        explained  in the text, and an example will be  given  for 
        each ot the above devices.

        - Set  switch S3 to PRG, except if programming a  2732, 
          in which case, S3 is set to RD!
        - Apply 26V.
        - Enter starting-address of the data block in memory.
        - Press [PGM].
             - Display will show underbar in MSD data position.
        - Enter  ending-address of the data  block  in  memory. 
          (Ending  address location will also  be  programmed). 
          Note: for a one byte block starting address =  ending 
          address.
        - Press [GO].
             - Display will show underbar in LSD data position.
        - Enter the destination-address in the EPROM where  the 
          data block is to be programmed.  (0000-07FF for 2716; 
          0000-0FFF for 2532 or 2732)
        - Press [GO].
             - Display  will keep the underbar in the LSD  data 
               position  but the address just entered  will  be 
               processed.

                                      -26-



        - Enter the device name to be programmed. i.e if a 2732 is 
          to be programmed, enter 2732, etc..
        - Press [GO].
             - If  the  block to be programmed is  in  a  fully 
               erase   condition  display  will  blank,   while 
               programming occurs.
             - If the block contains some non-FF locations  the 
               display  will show the address and data  of  the 
               first such location.
                  - Press   [GO]   again   to   proceed    with 
                    programming, or;
                  - Press [ESC] to return to Command mode.
             - Programming  will take 1 minute and  45  seconds 
               for 2K bytes and double that for 4K bytes.
        - Set S3 to RD (remove 26 volts).
        - Correct verification of the data is indicated by  two 
          underbars  in  the two address LSD positions  of  the 
          display.
        - The  verification is done between the source data  in 
          the specified block in memory and the correspondingly 
          sized block at the specified position in the EPROM.
             - If  a mismatch occurs the address and  data  are 
               displayed and may be checked in the same  manner 
               as a 2708.
        - Press [ESC] to return to Command mode.
             - When  programming  a 2532, it is  impossible  to 
               read  the  EPROM while the high voltage  is  ap-
               plied,  so just before verification the  display 
               will  show  S3=RD,  ie.  put  S3  in  the   read 
               position.

        Example:  Program location 153 in a 2716 with data from 
                  0556  in  RAM.   Only  one  bytes  is  to  be 
                  programmed.

        Keystrokes:     Display:       Comments:
                        _            < Start in Command mode and
                                       set S2 to EN
          0556          0556         < Enter starting address
          [PGM]              _
          0556          0556 _       < Enter ending address
          [GO]                _
          0153          0153  _      < Enter destination address in
                                       EPROM
          [GO]                _
          2716          2716  _      < Enter device name
          [GO]          0000 24      < First non-FF location
          [GO]                       < Continue programming
                          __         < Location 0153 programmed
                                     < correctly
          [ESC]         _            < Back to Command mode.










                                      -27-



        Example:  Program  a  2732, with 0100H  bytes  of  data 
                  located at 0400H in memory, and places it  at 
                  the beginning of the EPROM.

        Keystrokes:     Display:       Comments:
                        _            < Start in Command mode and
                                       set S2 to EN
          0400          0400         < Enter starting address
          [PGM]              _
          04FF          04FF _       < Enter ending address
          [GO]                _
          0000          0000  _      < Enter destination address in
                                       EPROM
          [GO]                _
          2732          2732  _      < Enter device name
          [GO]                       < Display blanks and assuming
                                       no errors occur...
                             __      < The data was programmed
                                       correctly into the EPROM
          [ESC]         _            < Return to Command mode

        Example:  Program  4K of data at location 1000H  in  memory 
                  into a 2532.

        Keystrokes:     Display:       Comments:
                        _            < Start in Command mode and
                                       set S2 to EN
          1000          1000         < Enter starting address
          [PGM]              _
          1FFF          1FFF _       < Enter ending address
          [GO]                _
          0000          0000  _      < Enter destination address in
                                       EPROM
          [GO]                _
          2532          2532  _      < Enter device name
          [GO]                       < Display will blank and pro-
                                       gramming will proceed if all
                                       the locations are FF.  This
                                       will last for approx. 3.5
                                       minutes.
                        S3=R d       < This indicates the machine
                                       is ready to verify the
                                       contents in the EPROM,
                                       however, it is impossible
                                       to read a 2532 with the high
                                       voltage applied, hence the
                                       machine is asking the user
                                       to switch off the high volt-
                                       age by setting S3 to Rd.
          [GO]              __       < Pressing [GO] will cause the
                                       machine to verify the 
                                       contents of the EPROM, and 
                                       if all goes well, the double
                                       underbar will appear
          [ESC]         _            < Return to Command mode






                                    -27(i)-



        Note:  For all devices, certain rudimentary error checking 
               is performed.  These include:
                    - unknown device specified.
                    - block size too large for specified device.
                    - ending address before starting address.

        For  all  the  above error conditions,  the  machine  will 
        display  the  standard  error  symbol  (three   horizontal 
        lines).   Once  an  error has occurred,  all  of  the  key 
        sequence  beforehand  will be aborted.  The  only  way  to 
        recover  from  an error of this type is  press  [ESC]  and 
        return to the Command mode.

        READING FROM THE EPROM SOCKET [PGM]

        To  read the contents of an already-programmed EPROM  into 
        the  computer's  RAM,  the sequence  of  operation  is  as 
        follows:
             - Set switch S2 to DIS and S3 to RD.
             - Insert  the EPROM into the programming socket  (U19 
               on the motherboard).
             - Set S2 to EN.
             - Press [PGM].
             - Enter  the starting address of the block in  memory 
               where the EPROM's contents are to be placed.
             - Press [GO].
             - Enter the device name, Eg. if you wish to read  the 
               contents of a 2716 the device name is [2716].*
             - Note that the machine assumes that there is  enough 
               memory at the starting address to hold the contents 
               of the EPROM.
             - The examine-memory mode will be entered  automatic-
               ally with the display showing the address and  data 
               of the first byte of the block.
           * Presently supported EPROMs are: 2708, 2716, 2732  and 
             2532. This reading procedure also assumes that J1 has 
             been  properly set up.  This is important,  incorrect 
             set-up of J1 may damage the EPROM.























                                    -27(ii)-



                                 ADDENDUM

           HARDWARE CHANGES TO SUPPORT NEWEST MONITOR REVISIONS

        All of the hardware modifications affect only the  mother-
        board during reading or programming from the EPROM socket.

        GENERAL MOTHERBOARD CHANGES

             1.  Remove R1 and D2.
             2.  Insert the following connections:
                 * [U18.15 and U23.5]
                   [U18.2  and U23.6]
                   [U23.4  and U26.1]

        The  above changes allow the data from output (PGD)  to 
        be enabled onto the EPROM's data lines, whenever bits 4 
        or 5 on output (PGAH) are set.

        *  Nomenclature conventions,  U18.15

                               Socket U18  Pin 15

        EPROM SPECIFICS
             -2708: Connect the component platform in the usual way.
             -2716: Connect the component platform in the usual way.
             -2532: Make a new component platform with the following
                    pairs of pins connected:
                          ( 8 and  9)
                          ( 7 and 12)
                          ( 6 and 11)
                          ( 5 and 10)

             -2732: Make a new component platform with the following
                    pairs of pins connected:
                          ( 2 and 13)
                          ( 6 and 11)
                          ( 8 and 10)

                    - also connect a jumper on the motherboard  from 
                      U18.15  to  pin 4 of the  component  platform.  
                      Remember  that  this connection  is  just  for 
                      2732s and is easy to forget about.
                      It  is  suggested that the  user  insert  some 
                      "flea clips" at the bottom right hand side  of 
                      the component platform, and connect U18.15  to 
                      one and pin 4 of the component platform to the 
                      other. In this way the user is always aware of 
                      the status of the  programming hardware.  Thus 
                      to program 2732s a jumper is places across the 
                      "flea  clips"  described above,  and  for  all 
                      other   EPROMs   there  should  not   be   any 
                      connection across these "clips".  Note:  while 
                      programming  2732s S3 should always be in  the 
                      read  (Rd)  position (see  recommended  proce-
                      dure).





                                   -27(iii)-



        RELATIVE BRANCH OFFSET CALCULATION [OFT]:

             This  utility  function is included to speed  up  the 
        calculation of  offsets  for the  Z80A's  relative  branch 
        instructions.   It  allows the user to  quickly  calculate 
        both  positive and 2's complement negative  offset  values 
        directly  in  hexadecimal notation.  The procedure  is  as 
        follows:

        - Enter  the  address of the first byte of  the  branch 
          instruction.
        - Press [OFT].
             - Display  will show an underbar in the  data  MSD 
               position.
        - Enter  the destination-address (address of the  first 
          byte  of  the instruction to which control is  to  be 
          transferred).
        - Press [GO].
             - Display will show the relative offset in hex.
               If  the offset is out of range, three bars  will 
               appear in the data MSD position.
        - Press [ESC] to return to Command mode.

        Example:  Calculate the relative offset required in a JR Z 
                  instruction   starting  in  location  05bC,   to 
                  transfer control to another instruction starting 
                  in 05A1:

        Keystrokes:     Display:       Comments:
                        _            < Start in Command mode
          05bC          05bC         < Enter address of first byte
                                       of branch instruction
          [OFT]              _
          05A1          05A1 _       < Enter address of first byte
                                       of destination instruction
          [GO]               E3      < Relative offset value

        Store E3 is location 05bd to complete the JR Z instruction.























                                      -28-

